{"name": "Verify clicking on SHIRTS navigates correctly", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF77033A785+20677]\n\tsimdutf::get_active_implementation [0x00007FF770296F30+492592]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF77058DC3A+1807418]\n\t(No symbol) [0x00007FF7700D72AC]\n\t(No symbol) [0x00007FF7700D758B]\n\t(No symbol) [0x00007FF7701185A7]\n\t(No symbol) [0x00007FF7700F849F]\n\t(No symbol) [0x00007FF7700CD6ED]\n\t(No symbol) [0x00007FF770115D61]\n\t(No symbol) [0x00007FF7700F81C3]\n\t(No symbol) [0x00007FF7700CCC36]\n\t(No symbol) [0x00007FF7700CC0C4]\n\t(No symbol) [0x00007FF7700CCA63]\n\t(No symbol) [0x00007FF7701B58DD]\n\t(No symbol) [0x00007FF7701C1D42]\n\t(No symbol) [0x00007FF7701BA703]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF77041478A+262026]\n\tsimdutf::get_active_implementation [0x00007FF7702A4661+547681]\n\tsimdutf::get_active_implementation [0x00007FF77029D914+519700]\n\tsimdutf::get_active_implementation [0x00007FF77029DA59+520025]\n\tsimdutf::get_active_implementation [0x00007FF77028F606+461574]\n\t(No symbol) [0x00007FF960E1E8D7]\n\tRtlUserThreadStart [0x00007FF96179BF6C+44]", "trace": "self = <POM_Framework.tests.test_navigation_wip.TestNavigationMenu object at 0x00000262C6B8E9B0>\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"74f364a4a25ed376fe5b1ccccdb7c553\")>\n\n    @allure.title(\"Verify clicking on SHIRTS navigates correctly\")\n    def test_click_on_shirts(self, driver):\n        home_page = HomePage(driver)\n        navigation_menu = NavigationMenu(driver)\n>       home_page.navigate_to_shirts()\n\ntest_navigation_wip.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\home_page.py:10: in navigate_to_shirts\n    self.click_element(self.SHIRTS_CATEGORY)\n..\\pages\\base_page.py:21: in click_element\n    element = self.find_element(locator)\n..\\pages\\base_page.py:16: in find_element\n    return WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"74f364a4a25ed376fe5b1ccccdb7c553\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x00000262C6D111B0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF77033A785+20677]\nE       \tsimdutf::get_active_implementation [0x00007FF770296F30+492592]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF77058DC3A+1807418]\nE       \t(No symbol) [0x00007FF7700D72AC]\nE       \t(No symbol) [0x00007FF7700D758B]\nE       \t(No symbol) [0x00007FF7701185A7]\nE       \t(No symbol) [0x00007FF7700F849F]\nE       \t(No symbol) [0x00007FF7700CD6ED]\nE       \t(No symbol) [0x00007FF770115D61]\nE       \t(No symbol) [0x00007FF7700F81C3]\nE       \t(No symbol) [0x00007FF7700CCC36]\nE       \t(No symbol) [0x00007FF7700CC0C4]\nE       \t(No symbol) [0x00007FF7700CCA63]\nE       \t(No symbol) [0x00007FF7701B58DD]\nE       \t(No symbol) [0x00007FF7701C1D42]\nE       \t(No symbol) [0x00007FF7701BA703]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x00007FF77041478A+262026]\nE       \tsimdutf::get_active_implementation [0x00007FF7702A4661+547681]\nE       \tsimdutf::get_active_implementation [0x00007FF77029D914+519700]\nE       \tsimdutf::get_active_implementation [0x00007FF77029DA59+520025]\nE       \tsimdutf::get_active_implementation [0x00007FF77028F606+461574]\nE       \t(No symbol) [0x00007FF960E1E8D7]\nE       \tRtlUserThreadStart [0x00007FF96179BF6C+44]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "parameters": [{"name": "driver", "value": "'edge'"}], "start": 1742276819976, "stop": 1742276830019, "uuid": "46a772ad-38ab-4c4e-a670-cae90f7d030d", "historyId": "74556ba021228c63fb1e21222d043bb8", "testCaseId": "659f63898821a5e84cfff96c6d1cd8c3", "fullName": "tests.test_navigation_wip.TestNavigationMenu#test_click_on_shirts", "labels": [{"name": "feature", "value": "Navigation Menu"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_navigation_wip"}, {"name": "subSuite", "value": "TestNavigationMenu"}, {"name": "host", "value": "BOMINA-NW10886"}, {"name": "thread", "value": "22020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_navigation_wip"}]}